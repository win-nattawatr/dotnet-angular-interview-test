version: "3.4"

services:
    backend:
        image: ${COMPOSE_PROJECT_NAME}-backend:prod
        build:
            context: .
            dockerfile: Backend/Dockerfile
            target: production
        ports:
            - 5000:8080
        depends_on:
            - db
        networks:
            - prod-network
        environment:
            - ASPNETCORE_ENVIRONMENT=Production
            - SQLCONNSTR_EMPLOYEE_WORKING_TIME_DB=Server=db;Database=EmployeeWorkingTime;User=sa;Password=N0t@Str0ngSecreT;TrustServerCertificate=true;
            - SQLCONNSTR_CARD_DB=Server=db;Database=Card;User=sa;Password=N0t@Str0ngSecreT;TrustServerCertificate=true;
            - ALLOWED_ORIGIN=http://localhost:4000

    frontend:
        image: ${COMPOSE_PROJECT_NAME}-frontend:prod
        build:
            context: .
            dockerfile: Frontend/Dockerfile
            target: production
        ports:
            - 4000:4000
        environment:
            - NG_APP_BACKEND_API_URL=http://localhost:5000

    db:
        image: mcr.microsoft.com/mssql/server:2022-latest
        environment:
            - ACCEPT_EULA=Y
            - SA_PASSWORD=N0tStr0ng$ecreT
        ports:
            - "1433:1433"
        volumes:
            - mssql-volume:/var/opt/mssql/data
        restart: always
        networks:
            - prod-network
        user: root

networks:
    prod-network:
        driver: bridge

volumes:
    mssql-volume:
